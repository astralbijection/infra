- name: Calculate file paths
  ansible.builtin.set_fact:
    run_user: root
    repo_base: /srv/infra
    project_base: /srv/services

- name: Verify provided vars
  ansible.builtin.validate_argument_spec:
    argument_spec: '{{ required_data }}'
  vars:
    required_data:
      env_astrid_tech_secret:
        type: "str"
        required: true
        description: "The api.astrid.tech secret key"

      env_astrid_tech_pgpass:
        type: "str"
        required: true
        description: "The Postgres user's password"

      env_armqr_password:
        type: "str"
        required: true
        description: "The Arm QR server's admin panel password"

- name: Install apt dependencies
  ansible.builtin.apt:
    name: 
      - docker
      - docker-compose
      - git
      - python3-pip
      - python3
    cache_valid_time: 3600
    state: present

- name: Install pip dependencies
  ansible.builtin.pip:
    name: 
      - docker
      - docker-compose

- name: Ensure docker is running
  systemd:
    name: docker.service
    enabled: yes
    state: started

- name: Give user docker group perm
  ansible.builtin.user:
    name: "{{ run_user }}"
    groups: docker
    append: yes

- name: Ensure infra directory exists with permissions
  ansible.builtin.file:
    state: directory
    path: "{{ repo_base }}"
    owner: "{{ run_user }}"
    mode: "0775"

- name: Update infra repo
  ansible.builtin.git:
    repo: https://github.com/astralbijection/infra.git
    dest: "{{ repo_base }}"
    update: yes
    clone: yes
    force: yes
    version: main

- name: Create symlink for our specific folder
  ansible.builtin.file:
    src: "{{ repo_base }}/docker-compose/oci-1"
    dest: "{{ project_base }}"
    owner: "{{ run_user }}"
    state: link

- name: Create proxied network
  community.docker.docker_network:
    name: proxied

- name: Generate astrid.tech .env file
  ansible.builtin.template:
    src: ../astrid.tech.env.j2
    dest: "{{ project_base }}/astrid_tech/.env.prod"
    owner: "{{ run_user }}"
    mode: "0700"

- name: Generate armqr .env file
  ansible.builtin.template:
    src: ../armqr.env.j2
    dest: "{{ project_base }}/armqr/.env"
    owner: "{{ run_user }}"
    mode: "0700"
  
- name: Restart services
  community.docker.docker_compose:
    project_src: "{{ project_base }}/{{ item.dir }}"
    pull: yes
    restarted: yes
    state: present
  with_items:
    - dir: caddy
    - dir: armqr
    - dir: astrid_tech
    - dir: aay_tw
    - dir: wm_receiver
