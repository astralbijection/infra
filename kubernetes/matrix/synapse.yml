apiVersion: v1
kind: Service
metadata:
  name: synapse
spec:
  selector:
    app: synapse-app
  ports:
    - port: 80
      targetPort: 8008
      appProtocol: http
      name: web
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: synapse-ingress
  labels:
    name: synapse-ingress
spec:
  rules:
    - host: matrix.astrid.tech
      http:
        paths:
          - pathType: Prefix
            path: "/"
            backend:
              service:
                name: synapse
                port:
                  number: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: synapse
spec:
  selector:
    matchLabels:
      app: synapse-app
  template:
    metadata:
      labels:
        app: synapse-app
    spec:
      containers:
        - name: synapse
          image: matrixdotorg/synapse
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 8008
              name: federation
          volumeMounts:
            # Upload folder
            - mountPath: /data/uploads
              name: data
              subPath: uploads
            # Media folder
            - mountPath: /data/media_store
              name: data
              subPath: media_store

            # homeserver.yaml that we generated
            - mountPath: /data/homeserver.yaml
              name: homeserver-yaml
              subPath: homeserver.yaml
            # Logging configuration
            - mountPath: /data/log.config
              name: configs
              subPath: log.config
            # Signing key
            - mountPath: /data/signing.key
              name: secrets
              subPath: signing.key

      initContainers:
        # An EXTREMELY janky way of injecting database credentials and other secrets.
        - name: generate-db-yaml
          image: busybox
          command:
            - generate-homeserver-yaml.sh
            - /inputs
            - /mnt/homeserver.yaml
          env:
            - name: username
              valueFrom:
                secretKeyRef:
                  name: synapse-db-creds
                  key: POSTGRES_USER
            - name: password
              valueFrom:
                secretKeyRef:
                  name: synapse-db-creds
                  key: POSTGRES_PASSWORD
            - name: db_name
              value: synapse
            - name: db_host
              value: synapse-db
          volumeMounts:
            # Config generator script
            - mountPath: /usr/local/bin
              name: config-gen
            # Config inputs
            - mountPath: /inputs/base.yaml
              name: configs
              subPath: homeserver.yaml
            # Secret inputs
            - mountPath: /inputs/secrets.yaml
              name: secrets
              subPath: secrets.yaml
            # Output for the homeserver.yaml
            - mountPath: /mnt
              name: homeserver-yaml

      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: synapse-data

        # db.yaml generator script
        - name: config-gen
          configMap:
            name: homeserver-yaml-generator
            defaultMode: 0755
        # homeserver.yaml configs
        - name: configs
          configMap:
            name: synapse-configs
        # homeserver.yaml secrets
        - name: secrets
          secret:
            secretName: synapse-secrets
        # Generated homeserver.yaml holder
        - name: homeserver-yaml
          emptyDir: {}
