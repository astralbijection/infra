name: Build LXC images

on:
  schedule:
    - cron: '0 6 * * 6'
  push:
    branches: [ main ]
    paths:
      - .github/workflows/build-lxc-images.yml
      - images/fedora_base/*
      - images/freeipa_server/*
      - images/vault_server/*
      - images/ops_server/*
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create release?'
        required: false
        default: false
env:
  base_image: fedora_base

jobs:
  build_fedora_base:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Initialize LXD
        run: sudo lxd init --auto

      - name: Build image
        run: >
            sudo packer build 
            -var "output_image_name=${{ env.base_image }}" 
            images/fedora_base
      
      - name: Export image
        run: sudo lxc image export local:${{ env.base_image }} /tmp/${{ env.base_image }}

      - name: Upload image tarball
        uses: actions/upload-artifact@v2.2.4
        with:
          name: "${{ env.base_image }}"
          path: /tmp/${{ env.base_image }}.tar.gz

  build_dependent_lxcs:
    runs-on: ubuntu-latest
    needs: build_fedora_base
    
    strategy:
      fail-fast: false
      matrix:
        image: [freeipa_server, vault_server, ops_server]

    steps:
      - uses: actions/checkout@v2
        
      - name: Initialize LXD
        run: sudo lxd init --auto

      - name: Download base image
        uses: actions/download-artifact@v2.0.10
        with:
          name: "${{ env.base_image }}"
          path: /tmp/
    
      - name: Import base image from tarball
        run: sudo lxc image import --alias ${{ env.base_image }} /tmp/${{ env.base_image }}.tar.gz
          
      - name: Build image
        run: >
            sudo packer build 
            -var "base_image_name=local:${{ env.base_image }}" 
            images/${{ matrix.image }}
      
      - name: Export image
        run: sudo lxc image export local:${{ matrix.image }} /tmp/${{ matrix.image }}

      - name: Upload image tarball
        uses: actions/upload-artifact@v2.2.4
        with:
          name: ${{ matrix.image }}
          path: /tmp/${{ matrix.image }}.tar.gz

  publish_release:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.create_release) }}
    needs: 
      - build_dependent_lxcs
      - build_fedora_base
    steps:
      - name: Download base image
        uses: actions/download-artifact@v2.0.10
        with:
          name: "${{ env.base_image }}"
          path: /tmp/
          
      - name: Download FreeIPA image
        uses: actions/download-artifact@v2.0.10
        with:
          name: freeipa_server
          path: /tmp/
      
      - name: Download Vault server
        uses: actions/download-artifact@v2.0.10
        with:
          name: vault_server
          path: /tmp/
      
      - name: Download Ops server
        uses: actions/download-artifact@v2.0.10
        with:
          name: ops_server
          path: /tmp/
      
      - name: Get formatted release date
        run: |
          echo "RELEASE_DATE=$(date --rfc-3339=seconds)" >> ${GITHUB_ENV}
          
      - name: Get formatted tag name
        run: |
          echo "RELEASE_TAG=$(date -u +'v4.0.%Y%m%d%H%M%S')" >> ${GITHUB_ENV}
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: Images for ${{ env.RELEASE_DATE }}
          body: |
            Freshly-built images, built at ${{ env.RELEASE_DATE }}.
          draft: false
          prerelease: false

  publish_lxcs:
    runs-on: ubuntu-latest
    needs: publish_release
    if: ${{ github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.create_release) }}

    strategy:
      fail-fast: false
      matrix:
        image: 
          - fedora_base
          - freeipa_server
          - vault_server
          - ops_server

    steps:
      - uses: actions/checkout@v2
        
      - name: Initialize LXD
        run: sudo lxd init --auto

      - name: Download ${{ matrix.image }}
        uses: actions/download-artifact@v2.0.10
        with:
          name: "${{ matrix.image }}"
          path: /tmp/
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: /tmp/${{ matrix.image }}.tar.gz
          asset_name: ${{ matrix.image }}.tar.gz
          asset_content_type: application/gzip
