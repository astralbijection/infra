# !!!!!!!! AUTO-GENERATED FILE, DO NOT MODIFY !!!!!!!!
#
# To modify CI behavior, you should edit /nix/ci.nix instead.
#
# This file can be regenerated by the following command:
#   $ nix run .#update-ci-workflow

env:
  TARGET_FLAKE: github:${{ github.repository }}/${{ inputs.sha || github.sha }}
jobs:
  devShells-x86_64-darwin:
    name: DevShells x86_64-darwin
    needs: []
    runs-on: macos-latest
    steps:
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace "$TARGET_FLAKE#"'devShells.x86_64-darwin.default'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  devShells-x86_64-linux:
    name: DevShells x86_64-linux
    needs: []
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace "$TARGET_FLAKE#"'devShells.x86_64-linux.default'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  home-manager-x86_64-darwin:
    name: Home cfgs. x86_64-darwin
    needs: []
    runs-on: macos-latest
    steps:
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace "$TARGET_FLAKE#"'homeConfigurations.astrid@soulcaster.activationPackage'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  home-manager-x86_64-linux:
    name: Home cfgs. x86_64-linux
    needs: []
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace "$TARGET_FLAKE#"'homeConfigurations.astrid@Discovery.activationPackage'
          "$TARGET_FLAKE#"'homeConfigurations.astrid@aliaconda.activationPackage'
          "$TARGET_FLAKE#"'homeConfigurations.astrid@banana.activationPackage' "$TARGET_FLAKE#"'homeConfigurations.astrid@chungus.activationPackage'
          "$TARGET_FLAKE#"'homeConfigurations.astrid@shai-hulud.activationPackage'
          "$TARGET_FLAKE#"'homeConfigurations.default.activationPackage'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  installer-iso:
    name: x86 Installer ISO
    needs:
      - home-manager-x86_64-linux
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace "$TARGET_FLAKE#"'packages.x86_64-linux.installer-iso'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-__basePC:
    name: NixOS sys. __basePC
    needs: []
    runs-on: ubuntu-latest
    steps:
      - name: Remove unneccessary packages
        run: 'echo "=== Before pruning ==="

          df -h

          sudo rm -rf /usr/share /usr/local /opt || true

          echo

          echo "=== After pruning ==="

          df -h

          '
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace "$TARGET_FLAKE#"'nixosConfigurations.__basePC.config.system.build.toplevel'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-__baseServer:
    name: NixOS sys. __baseServer
    needs:
      - home-manager-x86_64-linux
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace "$TARGET_FLAKE#"'nixosConfigurations.__baseServer.config.system.build.toplevel'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-amiya:
    name: NixOS sys. amiya
    needs:
      - nixos-system-__baseServer
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace "$TARGET_FLAKE#"'nixosConfigurations.amiya.config.system.build.toplevel'
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
          deploy_flake_attr: nixosConfigurations.amiya.config.astral.ci.deploy-package
        if: ${{ (github.event_name == 'workflow_call' && inputs.deploy) || (github.event_name
          != 'workflow_call' && github.ref == 'refs/heads/main') }}
        name: Deploy with nixosConfigurations.amiya.config.astral.ci.deploy-package
        run: GC_DONT_GC=1 nix run --show-trace "$TARGET_FLAKE#$run_flake_attr"
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-banana:
    name: NixOS sys. banana
    needs:
      - nixos-system-__basePC
    runs-on: ubuntu-latest
    steps:
      - name: Remove unneccessary packages
        run: 'echo "=== Before pruning ==="

          df -h

          sudo rm -rf /usr/share /usr/local /opt || true

          echo

          echo "=== After pruning ==="

          df -h

          '
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace "$TARGET_FLAKE#"'nixosConfigurations.banana.config.system.build.toplevel'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-bennett:
    name: NixOS sys. bennett
    needs:
      - nixos-system-__baseServer
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace "$TARGET_FLAKE#"'nixosConfigurations.bennett.config.system.build.toplevel'
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
          deploy_flake_attr: nixosConfigurations.bennett.config.astral.ci.deploy-package
        if: ${{ (github.event_name == 'workflow_call' && inputs.deploy) || (github.event_name
          != 'workflow_call' && github.ref == 'refs/heads/main') }}
        name: Deploy with nixosConfigurations.bennett.config.astral.ci.deploy-package
        run: GC_DONT_GC=1 nix run --show-trace "$TARGET_FLAKE#$run_flake_attr"
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-chungus:
    name: NixOS sys. chungus
    needs:
      - nixos-system-__basePC
    runs-on: ubuntu-latest
    steps:
      - name: Remove unneccessary packages
        run: 'echo "=== Before pruning ==="

          df -h

          sudo rm -rf /usr/share /usr/local /opt || true

          echo

          echo "=== After pruning ==="

          df -h

          '
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace "$TARGET_FLAKE#"'nixosConfigurations.chungus.config.system.build.toplevel'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-diluc:
    name: NixOS sys. diluc
    needs:
      - nixos-system-__baseServer
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace "$TARGET_FLAKE#"'nixosConfigurations.diluc.config.system.build.toplevel'
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
          deploy_flake_attr: nixosConfigurations.diluc.config.astral.ci.deploy-package
        if: ${{ (github.event_name == 'workflow_call' && inputs.deploy) || (github.event_name
          != 'workflow_call' && github.ref == 'refs/heads/main') }}
        name: Deploy with nixosConfigurations.diluc.config.astral.ci.deploy-package
        run: GC_DONT_GC=1 nix run --show-trace "$TARGET_FLAKE#$run_flake_attr"
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-donkey:
    name: NixOS sys. donkey
    needs:
      - nixos-system-__baseServer
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace "$TARGET_FLAKE#"'nixosConfigurations.donkey.config.system.build.toplevel'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-durin:
    name: NixOS sys. durin
    needs:
      - nixos-system-__baseServer
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace "$TARGET_FLAKE#"'nixosConfigurations.durin.config.system.build.toplevel'
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
          deploy_flake_attr: nixosConfigurations.durin.config.astral.ci.deploy-package
        if: ${{ (github.event_name == 'workflow_call' && inputs.deploy) || (github.event_name
          != 'workflow_call' && github.ref == 'refs/heads/main') }}
        name: Deploy with nixosConfigurations.durin.config.astral.ci.deploy-package
        run: GC_DONT_GC=1 nix run --show-trace "$TARGET_FLAKE#$run_flake_attr"
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-gfdesk:
    name: NixOS sys. gfdesk
    needs:
      - nixos-system-__baseServer
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace "$TARGET_FLAKE#"'nixosConfigurations.gfdesk.config.system.build.toplevel'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-shai-hulud:
    name: NixOS sys. shai-hulud
    needs:
      - nixos-system-__basePC
      - surface-kernel
    runs-on: ubuntu-latest
    steps:
      - name: Remove unneccessary packages
        run: 'echo "=== Before pruning ==="

          df -h

          sudo rm -rf /usr/share /usr/local /opt || true

          echo

          echo "=== After pruning ==="

          df -h

          '
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace "$TARGET_FLAKE#"'nixosConfigurations.shai-hulud.config.system.build.toplevel'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-yato:
    name: NixOS sys. yato
    needs:
      - nixos-system-__baseServer
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace "$TARGET_FLAKE#"'nixosConfigurations.yato.config.system.build.toplevel'
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
          deploy_flake_attr: nixosConfigurations.yato.config.astral.ci.deploy-package
        if: ${{ (github.event_name == 'workflow_call' && inputs.deploy) || (github.event_name
          != 'workflow_call' && github.ref == 'refs/heads/main') }}
        name: Deploy with nixosConfigurations.yato.config.astral.ci.deploy-package
        run: GC_DONT_GC=1 nix run --show-trace "$TARGET_FLAKE#$run_flake_attr"
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  surface-kernel:
    name: Compile MS Surface kernel
    needs: []
    runs-on: ubuntu-latest
    steps:
      - name: Remove unneccessary packages
        run: 'echo "=== Before pruning ==="

          df -h

          sudo rm -rf /usr/share /usr/local /opt || true

          echo

          echo "=== After pruning ==="

          df -h

          '
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - uses: cachix/install-nix-action@v18
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace "$TARGET_FLAKE#"'nixosConfigurations.shai-hulud.config.boot.kernelPackages.kernel'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
name: Build and deploy
on:
  push: {}
  schedule:
    - cron: 0 6 * * 6
  workflow_call:
    inputs:
      deploy:
        default: false
        description: Whether to deploy or not
        type: boolean
      sha:
        description: SHA to run on
        required: true
        type: string
    secrets:
      SSH_PRIVATE_KEY:
        description: SSH key to use for deployment
        required: true
  workflow_dispatch: {}
run-name: Build and deploy (${{ inputs.sha || github.sha }})
