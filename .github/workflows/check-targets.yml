# !!!!!!!! AUTO-GENERATED FILE, DO NOT MODIFY !!!!!!!!
#
# To modify CI behavior, you should edit /nix/ci.nix instead.
#
# This file can be regenerated by the following command:
#   $ nix run .#update-ci-workflow

env:
  KNOWN_HOSTS: '# !!!!!!!! AUTO-GENERATED FILE, DO NOT MODIFY !!!!!!!!

    #

    # This file contains all known_hosts to use during CI.

    #

    # It can be regenerated by the following command:

    #   $ nix run .#scan-ci-host-keys


    173.212.242.107 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIERtCtjNT5gh3pNZ3RhSv7x6t5tswp2IDkAGKl3Y/tQk

    173.212.242.107 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDRRmMgf6TrTMGEg73fdIi85wfgSPo1gtVm/cVftIyHCXBnOD7ud1B8yJ+96Iy5hzbxSN931g9+okjbnBp8vwnLdtY+x1zKNAzekS0Ty0UrvUkojUwkBJWdHjdBG+ALsbIg/O0IgURTCtZUKNOv2NpoU1voLVImDOHganQ2IAa7cRjwQHrB1+/f2Pu8ImI3qCqZmxRokr+Cf+7LCNQQGaP3ITCUX0rkGVnohWatT8JmV8887Znh7ZCgiA1E6vzclzgLVRwrUZRl0ePfI3JsnYmmbu7xE1tB7UzfeqM2ueL8a/fXMkoYxdS7jffB/bgZrwIZ6SsPHGrlpvSgBZ42nzK8OyFQ3Tcm9ni+RoVOVSe2CwXmcFKZjqmGkhtDrrsiiNtQGsM/92s0JlGRFjatr0srGpYUcz9Gyv1PIYL1Y1lRlmJFN7kRxjpz+Fxa87fvtjZ4MCQgvszIYnYkmgr0PhZ+dMRR+zSBQL6qLXMdOLSXZvjpHtIUgeZFv0FAZZ17xo3hffDaAbjqS6CreoM4th8CuvzYbopbTUOV+1aEhq+aqQeKGOUVEmhQGaBv2yOpyadPb5LmwCTkiqxYV8xDT+pnloNGyh4dKpFmRR0wPLN/5FeXUJTq88rKpHgxKTYTRacjb+HEFvZdBGz7Fp8G/3gK7KB4Bd1t7KU+vIAXzjq42Q==

    192.9.153.114 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJ2LFPxbKFI+ONx0dGm9gMPabGVZMqjaea9ctoiBwNgd

    192.9.153.114 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDHUtR+8og45b/ZnVtWdBrerwIyqN+oIHSezh6JkaFP/fL3DeekhVu7hdwc1zNXifwPMLE6HvN4mjcI6ao8dQeRSCDv4eCFOXhDfWsfXbNt/D8FBxCxDly5G4ajYrQzhma2SuMDIqz28XpjpDTylRYiqcSOOSjR6BeemL9OMv6vBgz0NUtJKUhtKV7LGVmDyOtaEJmXIfFoYoTZnU30A9kfsWjOfRuTzmVlkTVZiHNQsImgPRv87on8KsqkSv8eQwrXQ+3gI0Ixjeq6WMXMGMNtNdaST92jeMmt7VN/WqznbmItkZrRKQ47cYe5tAr7apLhI02VTrcRqN4TxjeA+DUtED07/AIKkiZnZYSmSaWYSlaF2PfvTxYtYJeiSVNCURrHrypLt/ZGawyFsea5I2rVsw9EDgg08hC3denI0tUGaOBdNaJcDjlCGYSdeLSsGiBrV/7rBVsgGQpdBnjCtHUkjlfe1JmVHjKFQkZHkybzdChWLCHXqeS2EWGnOK7p4jk=

    192.9.241.223 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHq9GUlQRHKAPFOnjlqG0XQff4WJjYU+CoPV18/Wv27p

    192.9.241.223 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCbR+geEe70IbiizVHxqlqwSSXqsa1eY8no8SE47S2Ovq0YCG2FAeBr/hL31vsq/q+wUMFDsMoIIdiQBiYjtiN0q5rgZM13Iqbq1RCH+KPR9dhZalusoLP8eRaAdOiHscdHUxPzJZTJ623/JFqi8mNarVMuR+zKtsSChcZU7giLrXeksxBCV2xdyeMsbnXw9KJTx5i86P3hSG+7UZP3AHmpgxhLsNkCiWq6RjUq/76HCWZJXBldqInQkOgk6Y60v3EPCbN5UXXTEzdKiJg+KrYHiZdtxIdg/XQaMmwv1wgVWFGBUpEWg+WjY2irNVFVjpU4sJB0y6CyXbL/Fdc8qpAmwgukfycgYJ2T/p+TNZl3ZebzzlRqPjVQ6KenHSBvL+qIEAomWXVzkMwsAE+Gajy+meMvU60iV4x/AHt8bafAjfhuFsiNqrRHDFoFwpVGaGqe4qagoMaDmW37U1OQTOLJiJKQCkMsMCsfgDBrWRJbcXERt6Qb/Qxgho6TbgF0ZSE=

    208.87.130.175 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIGlCI6im9YexmAbX37dFirsuPVN3e2lvsiU5IZR537iY

    208.87.130.175 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCqkeBPOYcIdLT6WUBXXN9G+ehPeZmylYfbW5TJFJRQ9QiigHW1J28zMgAnTqXOrnDasCaySO+bcH4RHIlUvJmaO9o21jytU3daCSVWW3SORRyaEob2RqWYqDZ+qd3gZi+6giI+MXKfsbyGpRHfwoXiG/OqlaggJNNemRt0HaYM90H+8yo44V7XqroruY5jr82uycK46KYazNDaK5hEWhya/EUOrOf52kPiO5EFMNQ/ExAakB9pxooSgLVojfN2gFVXkH2VAhG0oukWDHuz6nNVEinFrDVvxqwtIdKKELF2SmoYBoZJ6mHxYAL8FgP+BmTTQAg7iMT871QIuHwyMTR75uVmEPEuGDbXIP4hM0+OEEhj8qTEaaQS9zPwzSVNacdbHtDCf0Z5y+FNBqmr8AJk6s99AqArs7onex6ljw65Ev5fOviucYTkmbDIQebrWmRhwqJ59XcoQfIHFWxVUbQmLKEANq/6nPr8Trq1aRRRnTOvpsmXyKWz0zFWPDVvQrs=

    '
  TARGET_FLAKE: github:${{ github.repository }}/${{ inputs.sha || github.sha }}
jobs:
  devShells-x86_64-darwin:
    name: DevShells x86_64-darwin
    needs: []
    runs-on: macos-latest
    steps:
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - env:
          KNOWN_HOSTS: ${{ env.KNOWN_HOSTS }}
        name: Append to known_hosts
        run: 'echo ''\n'' >> ~/.ssh/known_hosts

          echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts

          '
      - uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace --log-lines 10000 --fallback "$TARGET_FLAKE#"'devShells.x86_64-darwin.default'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  devShells-x86_64-linux:
    name: DevShells x86_64-linux
    needs: []
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - env:
          KNOWN_HOSTS: ${{ env.KNOWN_HOSTS }}
        name: Append to known_hosts
        run: 'echo ''\n'' >> ~/.ssh/known_hosts

          echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts

          '
      - uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace --log-lines 10000 --fallback "$TARGET_FLAKE#"'devShells.x86_64-linux.default'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  home-manager-x86_64-darwin:
    name: Home cfgs. x86_64-darwin
    needs: []
    runs-on: macos-latest
    steps:
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - env:
          KNOWN_HOSTS: ${{ env.KNOWN_HOSTS }}
        name: Append to known_hosts
        run: 'echo ''\n'' >> ~/.ssh/known_hosts

          echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts

          '
      - uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace --log-lines 10000 --fallback "$TARGET_FLAKE#"'homeConfigurations.astrid@soulcaster.activationPackage'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  home-manager-x86_64-linux:
    name: Home cfgs. x86_64-linux
    needs: []
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - env:
          KNOWN_HOSTS: ${{ env.KNOWN_HOSTS }}
        name: Append to known_hosts
        run: 'echo ''\n'' >> ~/.ssh/known_hosts

          echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts

          '
      - uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace --log-lines 10000 --fallback "$TARGET_FLAKE#"'homeConfigurations.astrid@Discovery.activationPackage'
          "$TARGET_FLAKE#"'homeConfigurations.astrid@aliaconda.activationPackage'
          "$TARGET_FLAKE#"'homeConfigurations.astrid@banana.activationPackage' "$TARGET_FLAKE#"'homeConfigurations.astrid@chungus.activationPackage'
          "$TARGET_FLAKE#"'homeConfigurations.astrid@shai-hulud.activationPackage'
          "$TARGET_FLAKE#"'homeConfigurations.default.activationPackage'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  installer-iso:
    name: x86 Installer ISO
    needs:
      - home-manager-x86_64-linux
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - env:
          KNOWN_HOSTS: ${{ env.KNOWN_HOSTS }}
        name: Append to known_hosts
        run: 'echo ''\n'' >> ~/.ssh/known_hosts

          echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts

          '
      - uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace --log-lines 10000 --fallback "$TARGET_FLAKE#"'packages.x86_64-linux.installer-iso'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-__basePC:
    name: NixOS sys. __basePC
    needs: []
    runs-on: ubuntu-latest
    steps:
      - name: Remove unneccessary packages
        run: 'echo "=== Before pruning ==="

          df -h

          sudo rm -rf /usr/share /usr/local /opt || true

          echo

          echo "=== After pruning ==="

          df -h

          '
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - env:
          KNOWN_HOSTS: ${{ env.KNOWN_HOSTS }}
        name: Append to known_hosts
        run: 'echo ''\n'' >> ~/.ssh/known_hosts

          echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts

          '
      - uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace --log-lines 10000 --fallback "$TARGET_FLAKE#"'nixosConfigurations.__basePC.config.system.build.toplevel'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-__baseServer:
    name: NixOS sys. __baseServer
    needs:
      - home-manager-x86_64-linux
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - env:
          KNOWN_HOSTS: ${{ env.KNOWN_HOSTS }}
        name: Append to known_hosts
        run: 'echo ''\n'' >> ~/.ssh/known_hosts

          echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts

          '
      - uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace --log-lines 10000 --fallback "$TARGET_FLAKE#"'nixosConfigurations.__baseServer.config.system.build.toplevel'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-banana:
    name: NixOS sys. banana
    needs:
      - nixos-system-__basePC
    runs-on: ubuntu-latest
    steps:
      - name: Remove unneccessary packages
        run: 'echo "=== Before pruning ==="

          df -h

          sudo rm -rf /usr/share /usr/local /opt || true

          echo

          echo "=== After pruning ==="

          df -h

          '
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - env:
          KNOWN_HOSTS: ${{ env.KNOWN_HOSTS }}
        name: Append to known_hosts
        run: 'echo ''\n'' >> ~/.ssh/known_hosts

          echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts

          '
      - uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace --log-lines 10000 --fallback "$TARGET_FLAKE#"'nixosConfigurations.banana.config.system.build.toplevel'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-chungus:
    name: NixOS sys. chungus
    needs:
      - nixos-system-__basePC
    runs-on: ubuntu-latest
    steps:
      - name: Remove unneccessary packages
        run: 'echo "=== Before pruning ==="

          df -h

          sudo rm -rf /usr/share /usr/local /opt || true

          echo

          echo "=== After pruning ==="

          df -h

          '
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - env:
          KNOWN_HOSTS: ${{ env.KNOWN_HOSTS }}
        name: Append to known_hosts
        run: 'echo ''\n'' >> ~/.ssh/known_hosts

          echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts

          '
      - uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace --log-lines 10000 --fallback "$TARGET_FLAKE#"'nixosConfigurations.chungus.config.system.build.toplevel'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-diluc:
    name: NixOS sys. diluc
    needs:
      - nixos-system-__baseServer
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - env:
          KNOWN_HOSTS: ${{ env.KNOWN_HOSTS }}
        name: Append to known_hosts
        run: 'echo ''\n'' >> ~/.ssh/known_hosts

          echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts

          '
      - uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace --log-lines 10000 --fallback "$TARGET_FLAKE#"'nixosConfigurations.diluc.config.system.build.toplevel'
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
          deploy_flake_attr: nixosConfigurations.diluc.config.astral.ci.deploy-package
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        name: Deploy with nixosConfigurations.diluc.config.astral.ci.deploy-package
        run: GC_DONT_GC=1 nix run --show-trace "$TARGET_FLAKE#$deploy_flake_attr"
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-durin:
    name: NixOS sys. durin
    needs:
      - nixos-system-__baseServer
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - env:
          KNOWN_HOSTS: ${{ env.KNOWN_HOSTS }}
        name: Append to known_hosts
        run: 'echo ''\n'' >> ~/.ssh/known_hosts

          echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts

          '
      - uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace --log-lines 10000 --fallback "$TARGET_FLAKE#"'nixosConfigurations.durin.config.system.build.toplevel'
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
          deploy_flake_attr: nixosConfigurations.durin.config.astral.ci.deploy-package
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        name: Deploy with nixosConfigurations.durin.config.astral.ci.deploy-package
        run: GC_DONT_GC=1 nix run --show-trace "$TARGET_FLAKE#$deploy_flake_attr"
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-gfdesk:
    name: NixOS sys. gfdesk
    needs:
      - nixos-system-__baseServer
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - env:
          KNOWN_HOSTS: ${{ env.KNOWN_HOSTS }}
        name: Append to known_hosts
        run: 'echo ''\n'' >> ~/.ssh/known_hosts

          echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts

          '
      - uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace --log-lines 10000 --fallback "$TARGET_FLAKE#"'nixosConfigurations.gfdesk.config.system.build.toplevel'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-inferno:
    name: NixOS sys. inferno
    needs:
      - nixos-system-__baseServer
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - env:
          KNOWN_HOSTS: ${{ env.KNOWN_HOSTS }}
        name: Append to known_hosts
        run: 'echo ''\n'' >> ~/.ssh/known_hosts

          echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts

          '
      - uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace --log-lines 10000 --fallback "$TARGET_FLAKE#"'nixosConfigurations.inferno.config.system.build.toplevel'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-shai-hulud:
    name: NixOS sys. shai-hulud
    needs:
      - nixos-system-__basePC
      - surface-kernel
    runs-on: ubuntu-latest
    steps:
      - name: Remove unneccessary packages
        run: 'echo "=== Before pruning ==="

          df -h

          sudo rm -rf /usr/share /usr/local /opt || true

          echo

          echo "=== After pruning ==="

          df -h

          '
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - env:
          KNOWN_HOSTS: ${{ env.KNOWN_HOSTS }}
        name: Append to known_hosts
        run: 'echo ''\n'' >> ~/.ssh/known_hosts

          echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts

          '
      - uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace --log-lines 10000 --fallback "$TARGET_FLAKE#"'nixosConfigurations.shai-hulud.config.system.build.toplevel'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-twinkpaw:
    name: NixOS sys. twinkpaw
    needs:
      - nixos-system-__basePC
    runs-on: ubuntu-latest
    steps:
      - name: Remove unneccessary packages
        run: 'echo "=== Before pruning ==="

          df -h

          sudo rm -rf /usr/share /usr/local /opt || true

          echo

          echo "=== After pruning ==="

          df -h

          '
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - env:
          KNOWN_HOSTS: ${{ env.KNOWN_HOSTS }}
        name: Append to known_hosts
        run: 'echo ''\n'' >> ~/.ssh/known_hosts

          echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts

          '
      - uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace --log-lines 10000 --fallback "$TARGET_FLAKE#"'nixosConfigurations.twinkpaw.config.system.build.toplevel'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  nixos-system-yato:
    name: NixOS sys. yato
    needs:
      - nixos-system-__baseServer
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - env:
          KNOWN_HOSTS: ${{ env.KNOWN_HOSTS }}
        name: Append to known_hosts
        run: 'echo ''\n'' >> ~/.ssh/known_hosts

          echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts

          '
      - uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace --log-lines 10000 --fallback "$TARGET_FLAKE#"'nixosConfigurations.yato.config.system.build.toplevel'
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
          deploy_flake_attr: nixosConfigurations.yato.config.astral.ci.deploy-package
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        name: Deploy with nixosConfigurations.yato.config.astral.ci.deploy-package
        run: GC_DONT_GC=1 nix run --show-trace "$TARGET_FLAKE#$deploy_flake_attr"
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
  surface-kernel:
    name: Compile MS Surface kernel
    needs: []
    runs-on: ubuntu-latest
    steps:
      - name: Remove unneccessary packages
        run: 'echo "=== Before pruning ==="

          df -h

          sudo rm -rf /usr/share /usr/local /opt || true

          echo

          echo "=== After pruning ==="

          df -h

          '
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - env:
          KNOWN_HOSTS: ${{ env.KNOWN_HOSTS }}
        name: Append to known_hosts
        run: 'echo ''\n'' >> ~/.ssh/known_hosts

          echo "$KNOWN_HOSTS" >> ~/.ssh/known_hosts

          '
      - uses: cachix/install-nix-action@v22
        with:
          extra_nix_config: 'experimental-features = nix-command flakes

            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

            '
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v12
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: astralbijection
      - env:
          TARGET_FLAKE: ${{ env.TARGET_FLAKE }}
        name: Build targets
        run: GC_DONT_GC=1 nix build --show-trace --log-lines 10000 --fallback "$TARGET_FLAKE#"'nixosConfigurations.shai-hulud.config.boot.kernelPackages.kernel'
      - if: ${{ always() }}
        name: Log remaining space
        run: 'echo "=== Space left after build ==="

          df -h

          '
    strategy:
      fail-fast: false
name: Build and deploy
on:
  push: {}
  schedule:
    - cron: 0 6 * * 6
  workflow_call:
    inputs:
      deploy:
        default: false
        description: Whether to deploy or not
        type: boolean
      sha:
        description: SHA to run on
        required: true
        type: string
    secrets:
      SSH_PRIVATE_KEY:
        description: SSH key to use for deployment
        required: true
  workflow_dispatch: {}
run-name: Build and deploy (${{ inputs.sha || github.sha }})
