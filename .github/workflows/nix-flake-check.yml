# This is basically just a discount Hydra.

name: Build Nix targets

on:
  push: {}
  workflow_call: {}

jobs:
  calculate-matrix:
    name: Calculate build matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v10
        with:
          name: astralbijection
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Calculate build matrix
        run: |
          export target="github:astralbijection/infra/$GITHUB_SHA#gh-ci-matrix"
          echo "Building $target"
          GC_DONT_GC=1 nix build -o matrix.json $target

      - name: Set matrix output
        id: set-matrix
        run: |
          jq . matrix.json
          matrix=$(cat matrix.json)
          echo "::set-output name=matrix::$matrix"

  build-x86_64-targets:
    name: "Build ${{ matrix.target.target }} on ${{ matrix.target.os }}"
    needs: calculate-matrix
    runs-on: "${{ matrix.target.os }}"
    strategy:
      fail-fast: false
      # os/target pairs are written to target variable
      matrix: ${{ fromJson(needs.calculate-matrix.outputs.matrix).x86_64 }}

    steps:
      - name: Remove unnecessary packages
        run: | # stolen from https://github.com/easimon/maximize-build-space
          df -h

          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc

          df -h

      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v10
        with:
          name: astralbijection
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Build target ${{ matrix.target.target }}
        run: |
          export target="github:astralbijection/infra/$GITHUB_SHA#${{ matrix.target.target }}"
          echo "Building $target"
          GC_DONT_GC=1 nix build $target

  build-other-arch-targets:
    name: "Build ${{ matrix.target.target }} on ${{ matrix.target.arch }}-linux"
    runs-on: ubuntu-latest
    needs: calculate-matrix
    strategy:
      fail-fast: false
      # arch/os/target pairs are written to variable
      matrix: ${{ fromJson(needs.calculate-matrix.outputs.matrix).other }}
    steps:
      - uses: uraimo/run-on-arch-action@v2
        name: Build artifact
        id: build
        with:
          arch: ${{ matrix.target.arch }}
          distro: fedora_latest
          githubToken: ${{ github.token }}

          shell: /bin/sh
          install: |
            dnf install -y xz
            sh <(curl -L https://nixos.org/nix/install) --daemon
            
          run: |
            export target="github:astralbijection/infra/$GITHUB_SHA#${{ matrix.target.target }}"
            echo "Building $target"
            nix build ${{ matrix.target.target }}

