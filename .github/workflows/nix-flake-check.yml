# This is basically just a discount Hydra.
# TODO: figure out aarch64 builds

name: Validate flake and build targets

on:
  push: {}
  pull_request: {}
  workflow_call: {}

jobs:
  flake-check:
    name: Check Flake
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: cachix/install-nix-action@v13
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - uses: cachix/cachix-action@v10
        with:
          name: astralbijection
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Validate Nix Flake
        run: GC_DONT_GC=1 nix flake check

  nixos-build:
    name: Build NixOS configurations
    runs-on: ubuntu-latest
    
    needs:
      - flake-check
    
    strategy:
      fail-fast: false
      matrix:
        target:
          - gfdesk
          - banana
          - cracktop-pc
          - donkey
          # TODO: - jonathan-js
        
    steps:
      - uses: actions/checkout@v2

      - uses: cachix/install-nix-action@v13
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - uses: cachix/cachix-action@v10
        with:
          name: astralbijection
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Install nixos-rebuild
        run: GC_DONT_GC=1 nix-env -i nixos-rebuild -f '<nixpkgs>'

      - name: Build NixOS expression
        run: GC_DONT_GC=1 nixos-rebuild build --flake ".#${{ matrix.target }}"

  disk-images-build:
    name: Build disk images
    runs-on: ubuntu-latest

    needs:
      - flake-check
    
    strategy:
      fail-fast: false
      matrix:
        target:
          - installer-iso
          # TODO: - rpi-bootstrap-sd

    steps:
      - uses: actions/checkout@v2

      - uses: cachix/install-nix-action@v13
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - uses: cachix/cachix-action@v10
        with:
          name: astralbijection
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
  
      - name: Build image
        run: |
          GC_DONT_GC=1 nix build --experimental-features "nix-command flakes" ".#diskImages.${{ matrix.target }}"
          ln -s result/iso/*.iso "${{ matrix.target }}.iso"

      - name: Upload image
        uses: actions/upload-artifact@v2.2.4
        with:
          name: ${{ matrix.target }}.iso
          path: ${{ matrix.target }}.iso

  home-manager-build:
    # See https://nix-community.github.io/home-manager/index.html#sec-install-standalone
    name: Build Home Manager configurations
    runs-on: ubuntu-latest
    
    needs:
      - flake-check
    
    strategy:
      fail-fast: false
      matrix:
        target:
          - astrid@banana
          - astrid@cracktop-pc
          # TODO: - jonathan-js
        
    steps:
      - uses: actions/checkout@v2

      - uses: cachix/install-nix-action@v13
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - uses: cachix/cachix-action@v10
        with:
          name: astralbijection
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Install Home Manager
        run: |
          export GC_DONT_GC=1
          export NIX_PATH=$HOME/.nix-defexpr/channels${NIX_PATH:+:}$NIX_PATH
          nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager
          nix-channel --update
          nix-shell '<home-manager>' -A install

      - name: Build Home Manager expression
        run: |
          export GC_DONT_GC=1
          export NIX_PATH=$HOME/.nix-defexpr/channels${NIX_PATH:+:}$NIX_PATH
          home-manager build --flake '.#${{ matrix.target }}'
          
